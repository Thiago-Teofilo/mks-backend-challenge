module.exports = {
	parser: "@typescript-eslint/parser",
	parserOptions: {
		project: "tsconfig.eslint.json",
		sourceType: "module",
	},
	plugins: ["@typescript-eslint", "eslint-plugin-import-helpers", "custom-rules"],
	extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended", "prettier"],
	root: true,
	env: {
		node: true,
		jest: true,
	},
	rules: {
		"custom-rules/body-param-first": "error",
		"custom-rules/unit-of-work-first": "warn",
		"import-helpers/order-imports": [
			"error",
			{
				newlinesBetween: "always",
				groups: ["module", "/^@shared/", "parent", ["sibling", "index"]],
				alphabetize: { order: "asc", ignoreCase: true },
			},
		],
		indent: "off",
		quotes: "off",
		"no-unused-vars": "off",
		"no-extra-parens": "off",
		"no-promise-executor-return": "error",
		"no-template-curly-in-string": "error",
		"no-unreachable-loop": "error",
		"no-unsafe-optional-chaining": "error",
		"no-useless-backreference": "error",
		"require-atomic-updates": "error",
		"array-callback-return": "error",
		"block-scoped-var": "error",
		complexity: "error",
		"consistent-return": "error",
		curly: "error",
		"default-case": "error",
		"default-case-last": "error",
		"default-param-last": "off",
		"dot-location": ["error", "property"],
		"dot-notation": "off",
		eqeqeq: "error",
		"guard-for-in": "error",
		"no-alert": "error",
		"no-caller": "error",
		"no-constructor-return": "error",
		"no-else-return": ["error", { allowElseIf: false }],
		"no-empty-function": "off",
		"no-eq-null": "error",
		"no-eval": "error",
		"no-extend-native": "error",
		"no-extra-bind": "error",
		"no-floating-decimal": "error",
		"no-implicit-coercion": ["error", { allow: ["!!", "*"] }],
		"no-implicit-globals": "error",
		"no-implied-eval": "off", // typescript-eslint recommended
		"no-invalid-this": "off",
		"no-labels": "error",
		"no-lone-blocks": "error",
		"no-loop-func": "off",
		"no-magic-numbers": "off",
		"no-multi-spaces": "error",
		"no-multi-str": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-octal-escape": "error",
		"no-param-reassign": "off",
		"no-proto": "error",
		"no-return-assign": "error",
		"no-return-await": "off",
		"no-script-url": "error",
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-throw-literal": "off",
		"no-unmodified-loop-condition": "error",
		"no-unused-expressions": "off",
		"no-useless-call": "error",
		"no-useless-concat": "error",
		"no-useless-return": "error",
		"no-void": "error",
		"no-warning-comments": ["error", { terms: ["PLSFIX"] }],
		"prefer-promise-reject-errors": "error",
		"prefer-regex-literals": "error",
		"require-await": "off",
		"require-unicode-regexp": "off",
		"wrap-iife": ["error", "inside"],
		yoda: ["error", "never", { exceptRange: true }],
		"no-shadow": "off",
		"no-undefined": "off",
		"no-use-before-define": "off",
		"array-bracket-spacing": ["error", "never"],
		"array-element-newline": ["error", "consistent"],
		"block-spacing": "error",
		"brace-style": "off",
		camelcase: "off",
		"comma-dangle": "off",
		"comma-spacing": "off",
		"comma-style": "error",
		"computed-property-spacing": "error",
		"consistent-this": "warn",
		"eol-last": "warn",
		"func-call-spacing": "off",
		"func-names": "error",
		"func-style": ["error", "declaration", { allowArrowFunctions: true }],
		"function-call-argument-newline": ["error", "consistent"],
		// "function-paren-newline": ["error", "consistent"],
		"id-denylist": ["error"],
		"id-length": ["error", { min: 2, max: 30, exceptionPatterns: ["[A-Z_]+", "q", "$"] }],
		// "implicit-arrow-linebreak": ["error", "beside"],
		"key-spacing": "error",
		"keyword-spacing": "off",
		"linebreak-style": ["error", "unix"],
		"lines-between-class-members": "off",
		"max-depth": ["error", 4],
		"max-lines": ["warn", { max: 500, skipBlankLines: true }],
		"max-lines-per-function": ["warn", { max: 100, skipComments: true }],
		"max-nested-callbacks": ["error", 5],
		"max-statements": ["warn", 50],
		"max-statements-per-line": "error",
		"multiline-comment-style": ["off"],
		"newline-per-chained-call": ["error", { ignoreChainWithDepth: 2 }],
		"no-array-constructor": "off", // typescript-eslint recommended
		"no-extra-semi": "off", // typescript-eslint recommended
		"no-loss-of-precision": "off",
		"no-redeclare": "off",
		"no-bitwise": "warn",
		"no-continue": "off",
		"no-lonely-if": "error",
		"no-multi-assign": "error",
		"no-multiple-empty-lines": "error",
		"no-negated-condition": "off",
		"no-nested-ternary": "error",
		"no-new-object": "error",
		"no-trailing-spaces": "error",
		"no-unneeded-ternary": "error",
		"no-whitespace-before-property": "error",
		"object-curly-newline": ["error", { consistent: true }],
		"object-curly-spacing": "off",
		"one-var": ["error", "never"],
		"operator-assignment": ["warn", "always"],
		"padded-blocks": ["error", "never"],
		"padding-line-between-statements": ["error", { blankLine: "always", prev: "*", next: "return" }],
		"prefer-object-spread": "warn",
		"quote-props": ["warn", "as-needed"],
		semi: "off",
		"semi-spacing": "error",
		"semi-style": ["error", "last"],
		"space-before-blocks": "error",
		"space-before-function-paren": "off",
		"space-in-parens": ["error", "never"],
		"space-infix-ops": "off",
		"space-unary-ops": "error",
		"switch-colon-spacing": "error",
		"@typescript-eslint/ban-types": ["off"],
		"@typescript-eslint/array-type": ["error", { default: "array" }],
		"@typescript-eslint/ban-tslint-comment": "error",
		"@typescript-eslint/consistent-type-assertions": [
			"error",
			{ assertionStyle: "angle-bracket", objectLiteralTypeAssertions: "never" },
		],
		"@typescript-eslint/consistent-type-definitions": ["error", "interface"],
		"@typescript-eslint/consistent-type-imports": "error",
		"@typescript-eslint/explicit-member-accessibility": ["error", { accessibility: "no-public" }],
		"@typescript-eslint/member-delimiter-style": "error",
		"@typescript-eslint/member-ordering": ["error", { classes: { memberTypes: ["constructor", "field", "method"] } }],
		"@typescript-eslint/method-signature-style": ["error", "property"],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				selector: "typeLike",
				format: ["PascalCase"],
			},
			{
				selector: "interface",
				format: ["PascalCase"],
				prefix: ["I"],
			},
			{
				selector: "enum",
				format: ["PascalCase"],
				suffix: ["Enum"],
			},
			{
				selector: "variable",
				format: ["camelCase", "UPPER_CASE", "PascalCase"],
			},
			{
				selector: ["property", "method"],
				modifiers: ["private"],
				format: ["camelCase", "UPPER_CASE"],
				leadingUnderscore: "require",
			},
			{
				selector: "variable",
				types: ["boolean"],
				format: ["camelCase", "UPPER_CASE"],
				custom: {
					regex: "^(are|is|should|has|can|did|will|was|does|IS|SHOULD|HAS|CAN|DID|WILL|WAS|DOES)[a-zA-Z_]",
					match: true,
				},
			},
		],
		"@typescript-eslint/no-base-to-string": "error",
		"@typescript-eslint/no-confusing-void-expression": ["error", { ignoreArrowShorthand: true }],
		"@typescript-eslint/no-dynamic-delete": "off",
		"@typescript-eslint/no-invalid-void-type": "off",
		"@typescript-eslint/no-type-alias": "off",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": [
			"error",
			{
				allowComparingNullableBooleansToTrue: false,
				allowComparingNullableBooleansToFalse: false,
			},
		],
		// "@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unsafe-argument": "off",
		"@typescript-eslint/non-nullable-type-assertion-style": "off",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-includes": "error",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/prefer-nullish-coalescing": "error",
		"@typescript-eslint/prefer-optional-chain": "error",
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/prefer-readonly-parameter-types": "off",
		"@typescript-eslint/prefer-reduce-type-parameter": "error",
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/prefer-ts-expect-error": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/require-array-sort-compare": "off",
		"@typescript-eslint/sort-type-union-intersection-members": "off",
		"@typescript-eslint/strict-boolean-expressions": "off",
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/typedef": ["error"],
		"@typescript-eslint/unified-signatures": "error",
		"@typescript-eslint/brace-style": ["error"],
		"@typescript-eslint/comma-dangle": ["error", "always-multiline"],
		"@typescript-eslint/comma-spacing": ["error"],
		"@typescript-eslint/default-param-last": ["error"],
		"@typescript-eslint/dot-notation": ["error"],
		"@typescript-eslint/func-call-spacing": ["error", "never"],
		"@typescript-eslint/init-declarations": "off",
		"@typescript-eslint/keyword-spacing": "off",
		"@typescript-eslint/lines-between-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": "off",
		"@typescript-eslint/no-duplicate-imports": "off",
		"@typescript-eslint/no-empty-function": ["warn", { allow: ["constructors"] }],
		"@typescript-eslint/no-extra-parens": "off",
		"@typescript-eslint/no-invalid-this": ["error"],
		"@typescript-eslint/no-loop-func": ["error"],
		"@typescript-eslint/no-loss-of-precision": ["error"],
		"@typescript-eslint/no-magic-numbers": [
			"off",
			{
				ignoreArrayIndexes: true,
				ignore: [-1, 0, 1],
				ignoreEnums: true,
				ignoreNumericLiteralTypes: true,
				ignoreReadonlyClassProperties: true,
			},
		],
		"@typescript-eslint/no-redeclare": ["error"],
		"@typescript-eslint/no-shadow": ["error"],
		"@typescript-eslint/no-throw-literal": ["error"],
		"@typescript-eslint/no-unused-expressions": ["error"],
		"@typescript-eslint/no-unused-vars": "off",
		"@typescript-eslint/no-use-before-define": ["error", { functions: false, classes: false, enums: false }],
		"@typescript-eslint/no-useless-constructor": "off",
		"@typescript-eslint/object-curly-spacing": ["error", "always"],
		"@typescript-eslint/quotes": ["error", "double", { avoidEscape: true }],
		"@typescript-eslint/require-await": "warn",
		"@typescript-eslint/return-await": ["error", "in-try-catch"],
		"@typescript-eslint/semi": ["error"],
		"@typescript-eslint/space-before-function-paren": "off",
		"@typescript-eslint/space-infix-ops": ["error"],
		"@typescript-eslint/interface-name-prefix": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-non-null-assertion": "off",
	},
	overrides: [
		{
			files: ["eslint-custom-rules/**", "**/*.controller.e2e-spec.ts"],
			rules: {
				"no-magic-numbers": "off",
				"id-length": "off",
				complexity: "off",
				eqeqeq: "off",
				"max-lines-per-function": "off",
				"require-unicode-regexp": "off",
				camelcase: "off",
				"no-undefined": "off",
				"newline-per-chained-call": "off",
				"@typescript-eslint/naming-convention": "off",
				"@typescript-eslint/no-use-before-define": "off",
				"@typescript-eslint/no-loop-func": "off",
				"@typescript-eslint/no-var-requires": "off",
			},
		},
		{
			files: ["**/*entity.ts", "**/*dto.ts"],
			rules: {
				"no-magic-numbers": "off",
			},
		},
		{
			files: ["**/*spec.ts"],
			rules: {
				"max-nested-callbacks": "off",
				"max-lines-per-function": "off",
			},
		},
	],
};
